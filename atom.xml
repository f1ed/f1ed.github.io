<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fred&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://f1ed.github.io/"/>
  <updated>2020-02-24T10:15:22.289Z</updated>
  <id>https://f1ed.github.io/</id>
  
  <author>
    <name>f1ed</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello f1ed</title>
    <link href="https://f1ed.github.io/2020/02/24/hello-f1ed/"/>
    <id>https://f1ed.github.io/2020/02/24/hello-f1ed/</id>
    <published>2020-02-24T10:15:22.289Z</published>
    <updated>2020-02-24T10:15:22.289Z</updated>
    
    <content type="html"><![CDATA[<p>这只是一个测试</p><a id="more"></a><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>恰逢H国国庆，国王邀请n位大臣来玩一个有奖游戏。首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。然后，让这n位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。<br>国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，国王的位置始终在队伍的最前面。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含一个整数n，表示大臣的人数。<br>第二行包含两个整数a和b，之间用一个空格隔开，分别表示国王左手和右手上的整数。接下来n行，每行包含两个整数a和b，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。</p><p>$x_2+\Sigma_1^3$</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>…</p><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIN32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AUTO <span class="meta-string">"%I64d"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AUTO <span class="meta-string">"%lld"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLOCK CLOCKS_PER_SEC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> cle(x) memset(x,0,sizeof(x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxcle(x) memset(x,0x3f,sizeof(x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mincle(x) memset(x,-1,sizeof(x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxx(x1,x2,x3) max(x1,max(x2,x3))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> minn(x1,x2,x3) min(x1,min(x2,x3))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> cop(a,x) memcpy(x,a,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FROP <span class="meta-string">"hdu"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> smin(x,tmp) x=min(x,tmp)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> smax(x,tmp) x=max(x,tmp)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bigint</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> P =<span class="number">1</span>,M=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> w[<span class="number">4050</span>];</span><br><span class="line">    bigint()&#123;cle(w);w[<span class="number">0</span>]=<span class="number">1</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="keyword">int</span> now=<span class="number">1</span>,c1=<span class="number">1</span>,ct=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = s.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            w[now]+=(s[i]-<span class="string">'0'</span>)*c1;</span><br><span class="line">            c1*=<span class="number">10</span>;</span><br><span class="line">            ct++;</span><br><span class="line">            <span class="keyword">if</span>(ct==P&amp;&amp;i)&#123;c1=<span class="number">1</span>;ct=<span class="number">0</span>;now++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        w[<span class="number">0</span>]=now;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bigint <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">int</span> &amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        bigint a=*<span class="keyword">this</span>;</span><br><span class="line">        bigint c;</span><br><span class="line">        <span class="keyword">int</span> &amp;len=c.w[<span class="number">0</span>];</span><br><span class="line">        len=a.w[<span class="number">0</span>]+<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c.w[i]+=a.w[i]*b;</span><br><span class="line">            c.w[i+<span class="number">1</span>]=c.w[i]/M;</span><br><span class="line">            c.w[i]%=M;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(len&gt;<span class="number">1</span>&amp;&amp;!c.w[len])len--;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    bigint <span class="keyword">operator</span> /(<span class="keyword">const</span> <span class="keyword">int</span> &amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        bigint a=*<span class="keyword">this</span>;</span><br><span class="line">        bigint c;</span><br><span class="line">        <span class="keyword">int</span> &amp;len=c.w[<span class="number">0</span>];</span><br><span class="line">        len=a.w[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = len; i ;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp+=a.w[i];</span><br><span class="line">            <span class="keyword">if</span>(tmp&gt;=b)</span><br><span class="line">            &#123;</span><br><span class="line">                c.w[i]+=tmp/b;</span><br><span class="line">                tmp%=b;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp*=M;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(len&gt;<span class="number">1</span>&amp;&amp;!c.w[len])len--;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> bigint &amp;b)<span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        bigint a=*<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(a.w[<span class="number">0</span>]^b.w[<span class="number">0</span>])<span class="keyword">return</span> a.w[<span class="number">0</span>]&lt;b.w[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = a.w[<span class="number">0</span>];i;i--)</span><br><span class="line">            <span class="keyword">if</span>(a.w[i]^b.w[i])<span class="keyword">return</span> a.w[i]&lt;b.w[i];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,w[w[<span class="number">0</span>]]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = w[<span class="number">0</span>]<span class="number">-1</span>;i;i--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%0*d"</span>,P,w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;L,R;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ii</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    ii(<span class="keyword">int</span> l =<span class="number">0</span>,<span class="keyword">int</span> r=<span class="number">0</span>):l(l),r(r)&#123; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> ii &amp;b)<span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> l*r&lt;b.l*b.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;node[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(FROP<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(FROP<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    L.<span class="built_in">read</span>();</span><br><span class="line">    R.<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">        node[i]=ii(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(node+<span class="number">1</span>,node+n+<span class="number">1</span>);</span><br><span class="line">    bigint ans,tmp=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bigint x=tmp/node[i].r;</span><br><span class="line">        <span class="keyword">if</span>(ans&lt;x)ans=x;</span><br><span class="line">        tmp=tmp*node[i].l;</span><br><span class="line">    &#125;</span><br><span class="line">    ans.<span class="built_in">print</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p>[1] ……<a href="baidu.com">xxx</a></p><p>[2]</p>]]></content>
    
    <summary type="html">
    
      只是一个测试啦～
    
    </summary>
    
    
      <category term="测试" scheme="https://f1ed.github.io/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="https://f1ed.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Paul---big thief(Test)</title>
    <link href="https://f1ed.github.io/2020/02/20/Paul/"/>
    <id>https://f1ed.github.io/2020/02/20/Paul/</id>
    <published>2020-02-19T16:00:00.000Z</published>
    <updated>2020-02-24T09:00:49.312Z</updated>
    
    <content type="html"><![CDATA[<p>还是一个测试测试</p><a id="more"></a><hr><h1 id="有一说一"><a href="#有一说一" class="headerlink" title="有一说一"></a>有一说一</h1><p>Then he showed me what was love.</p><p>让我知道什么是爱。</p><p>I‘ll be your morning bright goodnight shadow machine.</p><p>我会是你早晨的阳光 你的晚安吻 你的影机。</p><p>I‘ll be your record player baby if you know what I mean.</p><p>如果你希望 我也会是你的唱机。</p><p>I‘ll be your real tough cookie with the whiskey breath.</p><p>我会是你带着威士忌香味的硬邦邦的曲奇。</p><p>I’ll be a killer and a thriller and the cause of our death.</p><p>我也可以成为可怕的杀手 让我们一起死去。</p><p>In the blossom of the months.</p><p>在花开的时候。</p><p>I was sure that I’d get driven off with thought.</p><p>我将会带着乱七八糟的想法离开。</p><p>So I swallowed all of it.</p><p>所以我将一切埋在心里。</p><p>As I realized there was no one who could kiss away my shit.</p><p>因为我意识到没有人可以让我糟透的生活好起来了。</p><p>I was your starry-eyed lover and the one that you saw.</p><p>我曾是你眼中 看见你时眼睛如星星般闪烁的爱人。</p><p>I was your hurricane rider and the woman you’d call.</p><p>曾在你需要时像飓风骑士一样飞奔而至。</p><p>We were just two moonshiners on the cusp of a breath.</p><p>但我们不过是在呼吸交汇中偷偷品尝了烈酒的气息。</p><p>And I’ve been burning for you baby since the minute I left.</p><p>而从我离开的那一刻起 我都在为你燃烧。</p><p>Good night!</p><p>晚安！</p><h1 id="有二说二"><a href="#有二说二" class="headerlink" title="有二说二"></a>有二说二</h1><h2 id="有二说一"><a href="#有二说一" class="headerlink" title="有二说一"></a>有二说一</h2><h2 id="有二说二-1"><a href="#有二说二-1" class="headerlink" title="有二说二"></a>有二说二</h2><h1 id="有三说三"><a href="#有三说三" class="headerlink" title="有三说三"></a>有三说三</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;还是一个测试测试&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试" scheme="https://f1ed.github.io/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="https://f1ed.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
